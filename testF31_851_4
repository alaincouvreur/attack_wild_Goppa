load "KeyGen.mgm";
load "BreakKey.mgm";
q:=31;
r:=4;
a:=q^2-851;

C, L, g:=KeyGen(q,r,a,2);

print "\n\n************************************";
printf "\nGoppa polynomial:\ng=%o\n\n", g;

n:=Length(C);
printf "Code of length %o.\n",n;
printf "Code of dimension %o.\n",Dimension(C);


F:=GF(q);
FF<w>:=ext<F|2>;

printf "\n\nComputing the gap sequence....";
GS:=GapSeq(F,FF, r, n, q+1);
print " [OK]";
print GS;

print "***********************************";
print "Computation of the filtrations:\n\n";
print "***********************************";

D1:=ExtShorten(C, {1});
print "Computation of D2.\n";
D2:=ComputeCi(C, D1, D1, D1, 1, 1000);
print "Computation of D4.\n";
D4:=ComputeCi(C, D2, D2, D2, 1, 1000);
print "Computation of D8.\n";
D8:=ComputeCi(C, D4, D4, D4, 1, 1000);
print "Computation of D16.\n";
D16:=ComputeCi(C, D8, D8, D8, 1, 1000);
print "Computation of D32.\n";
D32:=ComputeCi(C, D16, D16, D16, 1, 1000);
delete D1, D2, D4, D8, D16;


E1:=ExtShorten(C, {2});
print "Computation of E2.\n";
E2:=ComputeCi(C, E1, E1, E1, 2, 1000);
print "Computation of E4.\n";
E4:=ComputeCi(C, E2, E2, E2, 2, 1000);
print "Computation of E8.\n";
E8:=ComputeCi(C, E4, E4, E4, 2, 1000);
print "Computation of E16.\n";
E16:=ComputeCi(C, E8, E8, E8, 2, 1000);
print "Computation of E32.\n";
E32:=ComputeCi(C, E16, E16, E16, 2, 1000);
delete E1, E2, E4, E8, E16;

C0:=D32;
C1:=E32;

assert Dimension(C0) eq GS[q+1][2];
assert Dimension(C1) eq GS[q+1][2];

print "Computation of the Filtrations done!\n";
print "****************************************\n";

T:=BreakKeyManual(C, C0, C1, r);
print T;