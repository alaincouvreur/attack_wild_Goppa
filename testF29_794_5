load "KeyGen.mgm";
load "BreakKey.mgm";
q:=29;
r:=5;
a:=29^2-794;

C, L, g:=KeyGen(q,r,a,2);

//printf "Support L=%o", L;
//print "\n";

print "\n\n************************************";
printf "\nGoppa polynomial:\ng=%o\n\n", g;

n:=Length(C);
printf "Code of length %o.\n",n;
printf "Code of dimension %o.\n",Dimension(C);


F:=GF(q);
FF<w>:=ext<F|2>;

printf "\n\nComputing the gap sequence....";
GS:=GapSeq(F,FF, r, n, q+1);
print " [OK]";
print GS;

print "***********************************";
print "Computation of the filtrations:\n\n";
print "***********************************";

D1:=ExtShorten(C, {1});
print "Computation of D2.\n";
D2:=ComputeCi(C, D1, D1, D1, 1, 1000);
print "Computation of D3.\n";
D3:=ComputeCi(C, D2, D1, D2, 1, 1000);
print "Computation of D6.\n";
D6:=ComputeCi(C, D3, D3, D3, 1, 1000);
print "Computation of D12.\n";
D12:=ComputeCi(C, D6, D6, D6, 1, 1000);
print "Computation of D24.\n";
D24:=ComputeCi(C, D12, D12, D12, 1, 1000);
delete D1, D2, D3, D6, D12;


E1:=ExtShorten(C, {2});
print "Computation of E2.\n";
E2:=ComputeCi(C, E1, E1, E1, 2, 1000);
print "Computation of E3.\n";
E3:=ComputeCi(C, E2, E1, E2, 2, 1000);
print "Computation of E6.\n";
E6:=ComputeCi(C, E3, E3, E3, 2, 1000);
print "Computation of E12.\n";
E12:=ComputeCi(C, E6, E6, E6, 2, 1000);
print "Computation of E24.\n";
E24:=ComputeCi(C, E12, E12, E12, 2, 1000);
delete E1, E2, E3, E6, E12;

C0:=D24;
C1:=E24;

assert Dimension(C0) eq GS[q+1][2];
assert Dimension(C1) eq GS[q+1][2];

print "Computation of the Filtrations done!\n";
print "****************************************\n";

S, W, jj := BreakKeyManual(C, C0, C1, r);

