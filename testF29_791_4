load "KeyGen.mgm";
load "BreakKey.mgm";
q:=29;
r:=4;
a:=29^2-791;

C, L, g:=KeyGen(q,r,a,2);
//printf "Support L=%o", L;
//print "\n";

print "\n\n************************************";
printf "\nGoppa polynomial:\ng=%o\n\n", g;

n:=Length(C);
printf "Code of length %o.\n",n;
printf "Code of dimension %o.\n",Dimension(C);


F:=GF(q);
FF<w>:=ext<F|2>;

printf "Computing the gap sequence....";
GS:=GapSeq(F,FF, r, n, q+1);
print " [OK]";
print GS;

print "***********************************";
print "Computation of the filtrations:\n\n";
print "***********************************";

D1:=ExtShorten(C, {1});
print "Computation of D2.\n";
D2:=ComputeCi(C, D1, D1, D1, 1, 1000);
print "Computation of D3.\n";
D3:=ComputeCi(C, D2, D1, D2, 1, 1000);
print "Computation of D4.\n";
D4:=ComputeCi(C, D3, D2, D2, 1, 1000);
print "Computation of D7.\n";
D7:=ComputeCi(C, D4, D4, D3, 1, 1000);
print "Computation of D14.\n";
D14:=ComputeCi(C, D7, D7, D7, 1, 1000);
print "Computation of D28.\n";
D28:=ComputeCi(C, D14, D14, D14, 1, 1000);
delete D1, D2, D3, D4, D7, D14;


E1:=ExtShorten(C, {2});
print "Computation of E2.\n";
E2:=ComputeCi(C, E1, E1, E1, 2, 1000);
print "Computation of E3.\n";
E3:=ComputeCi(C, E2, E1, E2, 2, 1000);
print "Computation of E4.\n";
E4:=ComputeCi(C, E3, E2, E2, 2, 1000);
print "Computation of E7.\n";
E7:=ComputeCi(C, E4, E4, E3, 2, 1000);
print "Computation of E14.\n";
E14:=ComputeCi(C, E7, E7, E7, 2, 1000);
print "Computation of E28.\n";
E28:=ComputeCi(C, E14, E14, E14, 2, 1000);
delete E1, E2, E3, E4, E7, E14;

C0:=D28;
C1:=E28;

assert Dimension(C0) eq GS[q+1][2];
assert Dimension(C1) eq GS[q+1][2];

print "Computation of the Filtrations done!\n";
print "****************************************\n";

T:=BreakKeyManual(C, C0, C1, r);
print T;